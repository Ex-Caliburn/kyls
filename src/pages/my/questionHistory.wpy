<style>
  .ellipsis {
    display: block;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .list-container{
    padding: 20rpx 40rpx;
    background-color: #fff;
  }
  .pic-container{
    margin-right: 40rpx;
  }
  .ellipsis-content{
    width: 700rpx;
  }

  .avatarUrl {
    width: 120rpx;
    height: 120rpx;
    border-radius: 1000px;
    display: block;
  }
</style>

<template>
  <view class="page">
    <view class="page__bd">
      <view class="weui-panel">
        <view class="weui-panel__bd">
          <block wx:for-items="{{dataList}}" wx:for-index="index" wx:for-item="item" wx:key="id">
            <navigator url="/pages/chat?id={{id}}" class="list-container border " hover-class="weui-cell_active">
              <view class="ellipsis ellipsis-content">问题:{{item.questionContent}}</view>
              <view class="ellipsis ellipsis-content">答案:{{item.answerContent || '暂无回答'}}</view>
              <view class="flex flex-between">
                <view class="fz22">{{item.askTime}}</view>
                <view class="weui-cell__ft weui-cell__ft_in-access"></view>
              </view>
            </navigator>
          </block>
        </view>
      </view>
    </view>
  </view>
  <tabbar :tabbar.sync='tabbar'></tabbar>
</template>

<script>
  import wepy from 'wepy'
  import Tabbar from '@/components/tabbar'
  import Toast from 'wepy-com-toast'
  // import toast from 'mixins/toast'
  import tabbar from 'mixins/tabbar'
  import navigate from 'mixins/navigate'
  import reachBottom from 'mixins/reachBottom'
  import {post} from 'utils/service'
  // import db from 'utils/db'
  import { formatDate } from 'utils/common'
  // import { IS_POSTGRADUATE } from 'utils/constant'

  export default class questionHistory extends wepy.page {
    config = {
      navigationBarTitleText: '我的提问',
      window: {
        enableOnReachBottom: true
      }
    }
    components = {
      tabbar: Tabbar,
      toast: Toast
    }

    mixins = [tabbar, navigate, reachBottom]

    data = {
      pageSize: 10,
      pageNum: 1,
      avatarUrl: '',
      dataList: []
    }

    methods = {
      // goService (id) {
      //   this.navigate('chat?id=' + this.id)
      // }
    }

    fetchDate () {
      for (let i = 0; i < 10; i++) {
        let obj = {
          questionId: i,
          questionContent: '由各种物质组成的巨型球状天体由各种物质组成的巨型球状天体组成的巨型球状天体',
          answerContent: '由各种物质组成体',
          askTime: formatDate(new Date())
        }
        this.dataList.push(obj)
      }
      this.$apply()
      post({
        apiName: 'getPostgraduateInfo',
        data: {}
      })
        .then((res) => {
          res.forEach((item) => {
            item.askTime = formatDate(Date.now())
          })
          this.dataList.push(res)
          this.$apply()
        }).catch(err => {
          console.log(err)
        })
    }
    onShow () {
      this.avatarUrl = this.$parent.globalData.userInfo.avatarUrl
      this.fetchDate()
    }

    onLoad (params) {
    }
  }
</script>
