<style>
  .wrapper{
    margin: 20rpx 30rpx;
  }
  .money{
    margin-bottom: 20rpx;
    line-height: 70rpx;
    height: 70rpx;
    border-radius: 10rpx;
    width: 25%;
    text-align: center;
    border: 1px solid #09bb07;
    color: #09bb07;
    background-color: #fff;
  }
  .money-choose{
    border: 1px solid #fc5353;
    color: #fc5353;
  }

  .swiper_container {
    padding: 10rpx 15rpx;
    height: 70rpx;
  }

  .swiper_item {
    font-size: 25rpx;
    letter-spacing: 2px;
    color: #ea4a3a ;
    text-align: left;
  }
  .tip{
    padding: 10px 15px;
  }
</style>

<template>
  <view class="page">
    <view class="page__bd">
      <view class="weui-cells weui-cells_after-title">
        <swiper class="swiper_container" vertical="true" autoplay="true" circular="true" interval="2000">
          <block wx:for="{{msgList}}" wx:key="index">
            <swiper-item>
              <view class="swiper_item">{{item.carouselInfo}}</view>
            </swiper-item>
          </block>
        </swiper>

        <navigator url="/pages/questionType" class="weui-cell weui-cell_access" hover-class="weui-cell_active">
          <view class="weui-cell__bd">选择回答对象</view>
          <view class="weui-cell__ft weui-cell__ft_in-access"></view>
        </navigator>

        <view class="weui-cell">
          <view class="weui-cell__bd">
            <textarea @input="questionInput" class="textarea weui-textarea" maxlength="-1" placeholder="回答对象设置地越详细，我们越能为您精准地匹配到更优的回答者哟~" value="{{content}}"/>
            <view class="weui-textarea-counter">{{content.length}}</view>
          </view>
        </view>

        <uploadPic :files.sync="pictures" ></uploadPic>

        <view class="wrapper">
          <view>请设置悬赏金额：</view>
          <view class="flex flex-around flex-wrap" style="margin:20rpx">
            <block wx:for-items="{{moneyArr}}" wx:for-index="index" wx:for-item="item" wx:key="id">
              <view @tap="chooseMoney({{item}})" class="money {{item === rewardMoney ? 'money-choose' :''}}">{{item}}研贝</view>
            </block>
            <input @input="moneyBind" value="{{moneyInp}}" class="money money-enter  {{ entering ? 'money-choose' : '' }}" type="number" placeholder="自定义金额"/>
          </view>
        </view>

        <view class="fz26 tip">
          <view >温馨信息：</view>
          <view class="fz22">1、悬赏金额越高，您得到回复的速度越快且回复质量越高；</view>
          <view class="fz22">2、其它金额下限为8；</view>
          <view class="fz22">3、若一小时后您仍未得到回复，则研贝自动退还至您的余额。</view>
        </view>

        <button @tap="submit" class="weui-btn mini-btn type_yellow fz26">我要提问</button>
      </view>
    </view>
  </view>
  <tabbar :tabbar.sync='tabbar'></tabbar>
</template>


<script>
  import wepy from 'wepy'
  import Tabbar from '@/components/tabbar' // alias example
  // import Toast from 'wepy-com-toast'
  import toast from 'mixins/toast'
  import tip from 'utils/tip'
  import tabbar from 'mixins/tabbar'
  import { get, post } from 'utils/service'
  import navigate from 'mixins/navigate'
  import uploadPic from '@/components/uploadPic'
  // import db from 'utils/db'
  // import { IS_POSTGRADUATE } from 'utils/constant'

  export default class question extends wepy.page {
    config = {
      navigationBarTitleText: '我要提问'
    }
    components = {
      tabbar: Tabbar,
      uploadPic
    }

    mixins = [tabbar, navigate, toast]

    data = {
      questionInfo: {
      },
      moneyInp: '',
      content: '',
      pictures: [],
      questionType: 1,
      msgList: [],
      rewardMoney: '',
      entering: false,
      moneyArr: [16, 36, 66, 86, 166]
    }

    methods = {
      submit() {
        this.getUserAmountCount()
      },
      moneyBind(e) {
        this.entering = true
        let value = e.detail.value
        if (!value || value < 8) {
          value = 8
        }
        this.rewardMoney = Number(value)
        this.moneyInp = Number(value)
      },
      chooseMoney(val) {
        this.moneyInp = ''
        this.entering = false
        this.rewardMoney = Number(val)
      },
      getCode() {
        this.showGuide = !this.showGuide
      },
      questionInput(e) {
        this.content = e.detail.value
      }
    }

    submitQuestion () {
      let { content, pictures, questionType, rewardMoney } = this
      let questionInfo = {}
      if (this.questionInfo) {
        let { postgraduateSchoolId, postgraduateMajorId, degreeIndex, studyModeIndex, publicSubjectId } = this.questionInfo
        console.log(typeof publicSubjectId)
        questionInfo = {
          schoolId: postgraduateSchoolId || '' + '',
          majorId: postgraduateMajorId || '' + '',
          degreeNature: degreeIndex ? +degreeIndex + 1 : '',
          studyMode: studyModeIndex ? +studyModeIndex + 1 : '',
          publicSubjectId
        }
      }
      // degreeNature 学位性质 1学术型、2专业型
      // studyMode 1:全日制、2:非全日制
      // publicSubjectId
      // schoolId, //学校id
      //   majorId //专业id
      post({
        apiName: 'rewardQuestionSubmit',
        data: {
          ...questionInfo,
          rewardMoney,
          content,
          pictures: pictures.join(','),
          questionType // 1.聊天类型，2：电话，3面聊
        }})
        .then((res) => {
          this.navigate('my/info')
        }).catch(err => {
          console.log(err)
        })
    }
    getUserAmountCount () {
      if (!this.content) {
        this.ShowToast('请输入问题内容')
        return
      }
      console.log(this.rewardMoney)
      if (this.rewardMoney < 8) {
        this.ShowToast('最低悬赏金额8元')
        return
      }
      get({
        apiName: 'getUserAmountCount'
      })
        .then((res) => {
          if (res >= this.rewardMoney) {
            this.submitQuestion()
          } else {
            tip.confirm('余额不足，请去充值')
              .then(res => {
                this.navigate('my/recharge?back=1')
              }).catch(err => {
                console.log(err)
              })
          }
        }).catch(err => {
          console.log(err)
        })
    }
    getCarousel () {
      post({
        apiName: 'getCarousel',
        data: {
          pageNum: 1,
          pageSize: 10
        }
      }).then(res => {
        this.msgList = res
        this.$apply()
      }).catch(res => {
      })
    }
    onLoad (params) {
      this.getCarousel()
      this.questionInfo = wepy.$instance.globalData.questionInfo
      console.log(wepy.$instance.globalData.questionInfo)
      this.$apply()
    }
  }
</script>
