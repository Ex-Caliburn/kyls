<style>
  .title{
    padding: 10px 15px;
  }
  .weui-textarea{
    min-height: 450rpx;
  }
  .type_yellow{
    width: 200rpx;
  }
  .icon-cancel{
    position: absolute;
    top: -2rpx;
    right: -5rpx;
  }
  .weui-uploader__file{
    position: relative;
  }
</style>

<template>
  <view class="page">
    <view class="page__bd">
      <view class="weui-cells weui-cells_after-title">
        <view class="flex flex-between title">
          <view>聊天对象信息</view>
          <image @tap="love" class="love" src="{{icon}}"></image>
        </view>
        <view class="weui-cell">
          <view class="weui-cell__bd">
            <textarea @input="questionInput" class="weui-textarea" maxlength="-1" placeholder="请填写您的求助信息" value="{{content}}"/>
            <view class="weui-textarea-counter">{{content.length}}</view>
          </view>
        </view>
        <uploadPic :files.sync="pictures" ></uploadPic>
      </view>
    </view>
  </view>
  <button @tap="submit" class="weui-btn mini-btn type_yellow fz26">填写完毕</button>
  <tabbar :tabbar.sync='tabbar'></tabbar>
</template>

<script>
  import wepy from 'wepy'
  import Tabbar from '@/components/tabbar' // alias example
  import Toast from 'wepy-com-toast'
  import uploadPic from '@/components/uploadPic'
  // import toast from '../mixins/toast'
  import tabbar from 'mixins/tabbar'
  import navigate from 'mixins/navigate'
  import { post } from 'utils/service'
  import { LOVE, UNLOVE } from 'utils/constant'

  export default class answerEdit extends wepy.page {
    config = {
      navigationBarTitleText: '答案编辑'
    }
    components = {
      tabbar: Tabbar,
      toast: Toast,
      uploadPic
    }
    mixins = [tabbar, navigate]

    data = {
      loveStatus: false,
      icon: LOVE,
      content: '',
      pictures: [],
      questionId: '',
      questionType: 1
    }

    computed = {
      txtLength () {
        return this.content.length
      }
    }

    methods = {
      love () {
        if (this.loveStatus) {
          this.icon = UNLOVE
        } else {
          this.icon = LOVE
        }
        this.loveStatus = !this.loveStatus
        this.$apply()
      },
      questionInput (e) {
        this.content = e.detail.value
      },
      async submit () {
        let {userId, questionId, content, pictures} = this
        post({
          apiName: 'answerQuestion',
          data: {
            anserUserId: userId,
            questionId,
            content,
            pictures: pictures.join(','),
            questionType: 1 // 1.聊天类型，2：电话，3面聊
          }})
          .then((res) => {
            this.navigate('my/info')
          }).catch(err => {
            console.log(err)
          })
      }
    }
    onLoad (params) {
      this.answerUserId = params.answerUserId
      this.questionId = params.questionId
      console.log(params)
      this.$apply()
    }
  }
</script>
