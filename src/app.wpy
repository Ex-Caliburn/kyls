<style lang="less">
  @import "./styles/base";
  @import "./styles/icon";
  @import "./styles/style";
  @import './style/weui.less';

  /*page{*/
    /*background-color: #F8F8F8;*/
    /*font-size: 16px;*/
    /*font-family: -apple-system-font,Helvetica Neue,Helvetica,sans-serif;*/
  /*}*/
  /*.page__hd {*/
    /*padding: 40px;*/
  /*}*/
  /*.page__bd_spacing {*/
    /*padding-left: 15px;*/
    /*padding-right: 15px;*/
  /*}*/

  /*.page__ft{*/
    /*padding-bottom: 10px;*/
    /*text-align: center;*/
  /*}*/

  /*.page__title {*/
    /*text-align: left;*/
    /*font-size: 20px;*/
    /*font-weight: 400;*/
  /*}*/

  /*.page__desc {*/
    /*margin-top: 5px;*/
    /*color: #888888;*/
    /*text-align: left;*/
    /*font-size: 14px;*/
  /*}*/
  .container {
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    box-sizing: border-box;
  }
</style>

<script>
  import wepy from 'wepy'
  import 'wepy-async-function'

  import { login } from './utils/service'
  import db from './utils/db'
  import { SYSTEM_INFO, TOKEN } from './utils/constant'

  export default class extends wepy.app {
    config = {
      pages: [
        'pages/enter',
        'pages/index',
        'pages/home',
        'pages/message',
        'pages/test',
        'pages/searchbar',
        'pages/answer',
        'pages/question',
        'pages/searchList',
        'pages/serviceList',
        'pages/questionFrom',
        // 研究生
        'pages/graduateRegister',
        'pages/graduateList',
        'pages/probation',
        'pages/graduateDetail',
        // 本科生
        'pages/undergraduateRegister',
        'pages/chooseInterest',
        // 我的
        'pages/my/info',
        'pages/my/contact',
        'pages/my/about',
        'pages/my/medal',
        'pages/my/medalDetail',
        'pages/my/feedback',
        'pages/my/feedbackEdit',
        'pages/my/invitationCode',
        'pages/my/money',
        'pages/my/credit',
        'pages/my/recharge',
        'pages/my/withdraw',
        'pages/my/infoEdit',
        // 本科生我的
        'pages/my/questionHistory',
        'pages/my/thousandQuestion',
        'pages/my/helpMe',
        'pages/my/read',
        'pages/my/collection',
        'pages/my/diary',
        'pages/my/myHelp',
        // 研究生我的
        'pages/my/attractQuestion',
        'pages/my/checkout',
        // 静态页面
        'pages/materials/protocol',
        'pages/materials/help',
        'pages/materials/story'
      ],
      window: {
        navigationBarBackgroundColor: '#ffffff',
        navigationBarTextStyle: 'black',
        navigationBarTitleText: 'kyls',
        backgroundColor: '#dddddd'
      }
    }

    // FF7878 粉色
    globalData = {
      undergraduateSchoolId: 0,
      undergraduateMajorId: 0,
      isPostgraduate: false, // true 研究生 false本科生
      userInfo: null,
      token: '',
      tabbar: {
        color: '#707070',
        isPostgraduate: true,  // true 研究生 false本科生
        selectedColor: '#f06292',
        backgroundColor: '#ffffff',
        borderStyle: '#eee',
        position: 'bottom',
        list: [
          {
            pagePath: '/pages/index',
            text: '里手',
            iconPath: '/icon/home.png',
            selectedIconPath: '/icon/home@select.png',
            selected: true,
            show: true
          },
          {
            pagePath: '/pages/message',
            text: '消息',
            iconPath: '/icon/message.png',
            selectedIconPath: '/icon/message@select.png',
            selected: false,
            show: true
          },
          {
            pagePath: '/pages/answer',
            text: '悬赏速答',
            iconPath: '/icon/answer.png',
            selectedIconPath: '/icon/answer@select.png',
            selected: false,
            show: true
          },
          {
            pagePath: '/pages/question',
            text: '悬赏速问',
            iconPath: '/icon/question.png',
            selectedIconPath: '/icon/question@select.png',
            selected: false,
            show: false
          },
          {
            pagePath: '/pages/my/info',
            text: '我的',
            iconPath: '/icon/user.png',
            selectedIconPath: '/icon/user@select.png',
            selected: false,
            show: true
          }
        ]
      }
    }

    constructor () {
      super()
      this.use('requestfix')
      this.use('promisify')
      // 拦截request请求
      // this.intercept('request', {
      //   // 发出请求时的回调函数
      //   config (p) {
      //     // p.header.token = +new Date()
      //     // 对所有request请求中的OBJECT参数对象统一附加时间戳属性
      //     console.log('config request: ', p)
      //     // 必须返回OBJECT参数对象，否则无法发送请求到服务端
      //     return p
      //   },
      //
      //   // // 请求成功后的回调函数
      //   // success (p) {
      //   //   if (p.statusCode === 200) {
      //   //     // 可以在这里对收到的响应数据对象进行加工处理
      //   //     console.log('request success: ', p)
      //   //     // 必须返回响应数据对象，否则后续无法对响应数据进行处理
      //   //     return p
      //   //   } else {
      //   //     console.log(p.statusCode)
      //   //     return false
      //   //   }
      //   // },
      //   //
      //   // // 请求失败后的回调函数
      //   // fail (p) {
      //   //   console.log('request fail: ', p)
      //   //   // 必须返回响应数据对象，否则后续无法对响应数据进行处理
      //   //   return p
      //   // },
      //
      //   // 请求完成时的回调函数(请求成功或失败都会被执行)
      //   complete (p) {
      //     // 隐藏加载提示
      //     wepy.hideNavigationBarLoading()
      //     // 停止下拉状态
      //     wepy.stopPullDownRefresh()
      //     console.log('request complete: ', p)
      //   }
      // })
    }

    onShow () {
      // const updateManager = wepy.getUpdateManager && wepy.getUpdateManager()
      // updateManager.onCheckForUpdate(function(res) {
      //   // 请求完新版本信息的回调
      //   console.log(res.hasUpdate)
      // })
      // updateManager.onUpdateReady(function() {
      //   wepy.showModal({
      //     title: '更新提示',
      //     content: '新版本已经准备好，请重启应用',
      //     showCancel: false,
      //     success: function(res) {
      //       // 新的版本已经下载好，调用 applyUpdate 应用新版本并重启
      //       updateManager.applyUpdate()
      //     }
      //   })
      // })
      // updateManager.onUpdateFailed(function() {
      //   // 新的版本下载失败
      //   console.log('新版本下载失败！')
      // })
    }

    onLaunch () {
      // 存储系统信息
      let systemInfo = wepy.getSystemInfoSync()
      db.set(SYSTEM_INFO, systemInfo)
      this.getToken()
    }

    async _getUserInfo () {
    }

    // 微信登录
    async getToken () {
      let token = db.get(TOKEN)
      if (!token) {
        login()
      } else {
        wepy.checkSession()
          .then(res => {
            this.globalData.token = token
          }, err => {
            console.log('checkSession err', err)
            console.log(2)
            login()
          })
          .catch(err => {
            console.log('checkSession err', err)
            console.log(3)
            login()
          })
      }
    }
  }
</script>
